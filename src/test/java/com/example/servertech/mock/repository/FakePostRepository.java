package com.example.servertech.mock.repository;

import com.example.servertech.domain.post.entity.Post;
import com.example.servertech.domain.post.repository.PostRepository;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakePostRepository implements PostRepository {
	private final List<Post> data = Collections.synchronizedList(new ArrayList<>());
	private final AtomicLong autoGeneratedId = new AtomicLong(1);

	@Override
	public Post save(Post post) {
		Post build = Post.builder()
			.id(autoGeneratedId.getAndIncrement())
			.title(post.getTitle())
			.content(post.getContent())
			.writer(post.getWriter())
			.build();
		data.add(build);
		return build;
	}

	@Override
	public List<Post> findAll() {
		return Collections.unmodifiableList(data);
	}

	@Override
	public Optional<Post> findById(Long id) {
		return data.stream()
			.filter(p -> p.getId().equals(id))
			.findFirst();
	}
}
