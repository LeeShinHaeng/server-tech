package com.example.servertech.mock.repository;

import com.example.servertech.domain.user.entity.User;
import com.example.servertech.domain.user.repository.UserRepository;

import java.util.List;
import java.util.Optional;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.atomic.AtomicLong;

public class FakeUserRepository implements UserRepository {
	private final List<User> data = new CopyOnWriteArrayList<>();
	private final AtomicLong autoGeneratedId = new AtomicLong(1);

	@Override
	public User save(User user) {
		User build = User.builder()
			.id(autoGeneratedId.getAndIncrement())
			.name(user.getName())
			.email(user.getEmail())
			.password(user.getPassword())
			.role(user.getRole())
			.build();
		data.add(build);
		return build;
	}

	@Override
	public Optional<User> findById(Long id) {
		return data.stream()
			.filter(user -> user.getId().equals(id) && user.getDeletedAt() == null)
			.findFirst();
	}

	@Override
	public Optional<User> findByEmail(String email) {
		return data.stream()
			.filter(user -> user.getEmail().equals(email) && user.getDeletedAt() == null)
			.findFirst();
	}
}
